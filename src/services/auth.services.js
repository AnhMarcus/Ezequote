import Cookies from "js-cookie";

const fetchData = async (url, options = {}) => {
  const { method = "GET", body, headers = {} } = options; // M·∫∑c ƒë·ªãnh l√† GET n·∫øu kh√¥ng c√≥ ph∆∞∆°ng th·ª©c
  const cookieData = Cookies.get("userloginData");
  console.log(Cookies.get("userloginData"))

  let token = "";

  if (cookieData) {
    try {
      let data = JSON.parse(cookieData);
      token = data.token;
    } catch (e) {
      console.error("L·ªói", e);
    }
  }

  const fetchOptions = {
    method,
    headers: {
      "Content-Type": "application/json",
      ...headers, // N·∫øu c√≥ header t√πy ch·ªânh th√¨ s·∫Ω ƒë∆∞·ª£c n·ªëi th√™m v√†o
      Authorization: "Bearer " + token,
    },
    ...(body && { body: JSON.stringify(body) }), // Ch·ªâ th√™m body khi c√≥ d·ªØ li·ªáu
  };

  try {
    console.log("üì¶ Fetching from URL:", url);
    console.log("üîê Token:", token);
    console.log("üì® Fetch Options:", fetchOptions);
    const response = await fetch(url, fetchOptions);

    if (!response.ok) {
      throw new Error(`C√≥ l·ªói x·∫£y ra: ${response.statusText}`);
    }

    const data = await response.json(); // L·∫•y d·ªØ li·ªáu JSON t·ª´ ph·∫£n h·ªìi
    return { data, error: null }; // Tr·∫£ v·ªÅ d·ªØ li·ªáu n·∫øu th√†nh c√¥ng
  } catch (error) {
    return { data: null, error: error.message }; // Tr·∫£ v·ªÅ l·ªói n·∫øu c√≥
  }
};
export default fetchData;
